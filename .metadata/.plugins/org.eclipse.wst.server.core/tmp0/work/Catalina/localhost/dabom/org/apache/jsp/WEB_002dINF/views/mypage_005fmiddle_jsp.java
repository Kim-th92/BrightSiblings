/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2021-01-05 16:42:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.springframework.web.util.WebUtils;

public final class mypage_005fmiddle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.springframework.web.util.WebUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/mypage_middle.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"section\">\n");
      out.write("\t<div id=\"profile-section\">\n");
      out.write("\t<div id=\"main-container\">\n");
      out.write("\t\t<div id=\"mypage-photo\">\n");
      out.write("\t\t\t<div id =\"mypage-profileimg\" style=\"position: relative;\">\n");
      out.write("\t\t\t\t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.member_profile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t<form method=\"post\" id=\"uploadprofilepic\" enctype=\"mulipart/form-data\">\n");
      out.write("\t\t\t\t<input type=\"file\" name=\"file\"  id=\"profile-file\"  accept=\"image/gif,image/jpg,image/jpeg,image/png\" style=\"display:none\"/></form>\n");
      out.write("\t\t\t\t<button id=\"profile-pic-add\" title=\"사진편집\" onclick=\"document.getElementById('profile-file').click();\"><i class=\"fas fa-camera\"></i></button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<form method=\"post\" id=\"uploadprofilebgpic\" enctype=\"mulipart/form-data\">\n");
      out.write("\t\t\t\t<input type=\"file\" name=\"file\"  id=\"profile-bg-file\"  accept=\"image/gif,image/jpg,image/jpeg,image/png\" style=\"display:none\"/></form>\n");
      out.write("\t\t\t\t\t<button id=\"profile-bg-add\">배경사진편집</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div id=\"hidemodal\">\n");
      out.write("\t\t\t\t<div class=\"modalcenter\">\n");
      out.write("\t\t\t\t\t<h1>사진을 선택하시거나, 원하는 사진을 업로드 해보세요!</h1>\n");
      out.write("\t\t\t\t\t\t<div id=\"selectBG\" style=\"display: grid;grid-gap: 10px; margin-left:40px;margin-bottom:60px; grid-template-rows: 200px 200px;grid-template-columns: 1fr 1fr 1fr 1fr;\">\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<input type=\"button\"  class=\"modalbtn\" onclick=\"document.getElementById('profile-bg-file').click();\" value=\"배경사진 업로드\">\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" class=\"modalbtn\"  onclick =\"uploadByExsist();\" value=\"선택한 사진으로 저장\">\n");
      out.write("\t\t\t\t\t\t<form method=\"post\" id=\"uploadprofilebgpic\" enctype=\"mulipart/form-data\">\n");
      out.write("\t\t\t\t<input type=\"file\" name=\"file\"  id=\"profile-bg-file\"  accept=\"image/gif,image/jpg,image/jpeg,image/png\" style=\"display:none\"/></form>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.member_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id=\"mypage-navbar\">\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t\t<li><a id=\"board\" href=\"mypage_main.do\">게시글</a></li>\n");
      out.write("\t\t\t\t<li><a id =\"friends\" href=\"mypage_friends.do\">친구</a></li>\n");
      out.write("\t\t\t\t<li><a id=\"food\" href=\"mypage_food.do\">식단</a></li>\n");
      out.write("\t\t\t\t<li><a id=\"exercise\" href=\"mypage_exercise.do\">런닝</a></li>\n");
      out.write("\t\t\t\t<li><button id =\"infoupdatebtn\">내 정보 편집</button></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("\n");
      out.write("$('#profile-file').change(function(){\n");
      out.write("\t\n");
      out.write("\tvar form = $('#uploadprofilepic')[0];\n");
      out.write("\tconsole.log(form);\n");
      out.write("\tvar formData = new FormData(form);\n");
      out.write("\tconsole.log(formData);\n");
      out.write("\t$.ajax({\n");
      out.write("\t\turl : \"profilePicUpload.do\"\n");
      out.write("\t\t\t, type : \"POST\"\n");
      out.write("\t\t        , processData : false\n");
      out.write("\t\t        , contentType : false\n");
      out.write("\t\t        , data : formData\n");
      out.write("\t\t        , success:function(msg) {\n");
      out.write("\t\t        \tconsole.log(msg);\n");
      out.write("\t\t        \talert(\"사진 수정 완료 !\");\n");
      out.write("\t\t        \tlocation.reload();\n");
      out.write("\t\t        },error:function(err){\n");
      out.write("\t\t        \tconsole.log(err)\n");
      out.write("\t\t        }\n");
      out.write("\t});\n");
      out.write("})\n");
      out.write("$('#profile-bg-add').click(function(){\n");
      out.write("\t$('#hidemodal').toggle();\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("$(document).ready(function(){\n");
      out.write("\t$('#hidemodal').hide();\n");
      out.write("\tvar bgProfile = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.member_bgprofile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t$('#mypage-profileimg').css(\"background-image\",\"url('\"+bgProfile+ \"')\");\n");
      out.write("\t$('#mypage-profileimg').css(\"background-size\",\"80% 400px\");\n");
      out.write("\t$('#mypage-profileimg').css(\"background-repeat\",\"round\");\n");
      out.write("\tvar div = \"\";\n");
      out.write("\tfor(var i =1; i < 9;i++){\n");
      out.write("\t\tvar imgSelect= \"<div><img style='width:170px ;height:170px;' src='/dabom/resources/image/diet/diet0\"+i+\".jpg' alt='다이어트사진'>\"\n");
      out.write("\t\t\t\t\t\t\t\t+\"<input type='radio' name='bg-select' value='/dabom/resources/image/diet/diet0\"+i\n");
      out.write("\t\t\t\t\t\t\t\t+\".jpg'/>\"\n");
      out.write("\t\t\t\t\t\t\t\t+\"</div>\";\n");
      out.write("\t\tdiv += imgSelect;\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t$('#selectBG').append(div);\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("//배경파일업로드시 \n");
      out.write("$('#profile-bg-file').change(function(){\n");
      out.write("\t\n");
      out.write("\tvar form = $('#uploadprofilebgpic')[0];\n");
      out.write("\tvar formData = new FormData(form);\n");
      out.write("\tconsole.log(formData);\n");
      out.write("\t$.ajax({\n");
      out.write("\t\turl : \"profilePicBgUpload.do\"\n");
      out.write("\t\t\t, type : \"POST\"\n");
      out.write("\t\t        , processData : false\n");
      out.write("\t\t        , contentType : false\n");
      out.write("\t\t        , data : formData\n");
      out.write("\t\t        , success:function(msg) {\n");
      out.write("\t\t        \tconsole.log(msg);\n");
      out.write("\t\t        \talert(\"배경사진 수정 완료 !\");\n");
      out.write("\t\t        \tlocation.reload();\n");
      out.write("\t\t        },error:function(err){\n");
      out.write("\t\t        \tconsole.log(err)\n");
      out.write("\t\t        }\n");
      out.write("\t});\n");
      out.write("})\n");
      out.write("//선택한 사진 저장할때\n");
      out.write("function uploadByExsist(){\n");
      out.write("\t  var st = $(\":input:radio[name=bg-select]:checked\").val();\n");
      out.write("\t  var data = {\"bg_profile\":st}\n");
      out.write("\t  $.ajax({\n");
      out.write("\t\t\turl : \"profileExPicBgUpload.do\"\n");
      out.write("\t\t\t\t, type : \"POST\"\n");
      out.write("\t\t\t        , data :data\n");
      out.write("\t\t\t        , success:function(msg) {\n");
      out.write("\t\t\t        \tconsole.log(msg);\n");
      out.write("\t\t\t        \talert(\"배경사진 수정 완료 !\");\n");
      out.write("\t\t\t        \tlocation.reload();\n");
      out.write("\t\t\t        },error:function(err){\n");
      out.write("\t\t\t        \tconsole.log(err)\n");
      out.write("\t\t\t        }\n");
      out.write("\t\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
