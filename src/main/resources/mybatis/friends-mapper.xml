<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="friends">

	<resultMap type="memberDto" id="friendjoin">
		<result column = "MEMBER_NAME" property="member_name"/>
		<result column = "MEMBER_NO" property="member_no"/>
		<result column = "MEMBER_PROFILE" property="member_profile"/>
		<collection property ="friends_dto" resultMap="friendsDto"/>
	</resultMap>
  	<resultMap type="friendsDto" id="friendsDto">
  		<result column = "MEMBER_NO" property="member_no"/>
		<result column = "FRIEND_NO" property="friend_no"/>
		<result column = "STATUS" property="status"/>
		<result column = "ACTION_MEMBER" property="action_member"/>
  	</resultMap>
  	
  	<resultMap type="foodDto" id="foodDto">
 		<result column = "FOOD_NO" property="food_no"/>
 		<result column = "FOOD_NAME" property="food_name"/>
 		<result column = "SERVING_SIZE" property="serving_size"/>
 		<result column = "KCAL" property="kcal"/>
 		<result column = "CARBOHYDRATE" property="carbohydrate"/>
 		<result column = "PROTEIN" property="protein"/>
 		<result column = "FAT" property="fat"/>
 		<result column = "SUGAR" property="sugar"/>
 		<result column = "SODIUM" property="sodium"/>
  	</resultMap>
  	
	<select id="friendslist"  resultMap="friendjoin" parameterType="int">
		 <![CDATA[
		select m.member_name, m.member_no,m.member_profile
		from member m join friends f
		on m.member_no = f.friend_no
		where
		m.member_no <> #{member_no} and m.member_no in (select friend_no from friends where member_no =#{member_no} or  friend_no = #{member_no}) and f.status =1
		
		]]>
	</select>
	
	<select id ="searchlist" resultType="memberDto" parameterType="map">
		 <![CDATA[
		SELECT * FROM MEMBER
		WHERE MEMBER_NAME LIKE '%'||#{keyword}||'%' and member_no  <> #{member_no}
		]]>
	</select>
	
	<select id ="friendsrequestting" resultMap="friendjoin">
		select m.member_name, m.member_no,m.member_profile
		from member m  left join friends f
		on m.member_no = f.member_no
		where
		m.member_no in (select member_no  from friends where friend_no = #{friend_no}) and status =0
	</select>
	
	
	
	<select id= "friendsrequested" resultMap="friendjoin"  >
		select m.member_name, m.member_no,m.member_profile
		from member m  join friends f
		on m.member_no = f.friend_no
		where
		m.member_no in (select friend_no from friends where member_no =#{member_no}) and  f.status =0
	</select>
	
	<insert id="friendAdd" parameterType="friendsDto">
		insert into friends values (#{member_no},#{friend_no},0,#{friend_no})
	</insert>
	
	<update id="friendAccepted" >
	update friends set status =1 where member_no =#{member_no} and friend_no = #{friend_no}
	</update>
	
	<update id="friendDennied" >
	update friends set status =2 where member_no =#{member_no} and friend_no = #{friend_no}
	</update>
	
	<delete id="cancelRequest" parameterType="friendsDto">
		delete from friends where member_no = #{member_no} and action_member= #{friend_no}
	</delete>
	
	<insert id ="foodDB" parameterType="java.util.List">
		insert  all
		<foreach   item ="item" index="index" separator=" " collection="list" >
into fooddb (food_no,food_name,serving_size,kcal,carbohydrate,protein,fat,sugar,sodium)  values
		(
			#{item.food_no},
			#{item.food_name},
			#{item.serving_size},
			#{item.kcal},
			#{item.carbohydrate},
			#{item.protein},
			#{item.fat},
			#{item.sugar},
			#{item.sodium}
		)
		
		</foreach>
		select * from dual
	</insert>
	
</mapper>
